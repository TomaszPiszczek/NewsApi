name: Deploy App 1

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Sprawdzenie kodu z repozytorium
      - name: Checkout code
        uses: actions/checkout@v3

      # Walidacja klucza PEM
      - name: Validate PEM key
        run: |
          echo "${{ secrets.AWS_PEM }}" > key.pem
          chmod 600 key.pem

      # Upewnienie się, że sieć Dockera istnieje
      - name: Ensure Docker network exists on EC2
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no ec2-user@51.20.68.13 << EOF
            docker network inspect my-network >/dev/null 2>&1 || docker network create my-network
          EOF

      # Budowanie aplikacji z Maven
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Weryfikacja plików wynikowych
      - name: Verify build outputs
        run: |
          ls -lh target/*.jar
          ls -lh Dockerfile

      # Tworzenie katalogu i wysyłanie plików na EC2
      - name: Ensure target directory exists on EC2
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no ec2-user@51.20.68.13 << EOF
            mkdir -p ~/app/
          EOF
          scp -i key.pem -o StrictHostKeyChecking=no target/*.jar ec2-user@51.20.68.13:~/app/
          scp -i key.pem -o StrictHostKeyChecking=no Dockerfile ec2-user@51.20.68.13:~/app/

      # Zmiana nazwy pliku JAR na app.jar na EC2
      - name: Rename JAR file on EC2
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no ec2-user@51.20.68.13 << EOF
            mv ~/app/*.jar ~/app/app.jar
          EOF

      # Uruchamianie kontenera Dockera na EC2
      - name: Run Docker container on EC2
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no ec2-user@51.20.68.13 << EOF
            cd ~/app/
            docker stop spring-boot-container || true
            docker rm spring-boot-container || true
            docker build -t my-spring-boot-app .
            docker run -d --network my-network -p 8081:8081 --name spring-boot-container my-spring-boot-app
          EOF

      # Testowanie statusu kontenera
      - name: Test container status on EC2
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no ec2-user@51.20.68.13 << EOF
            docker ps | grep spring-boot-container || exit 1
            docker logs spring-boot-container
          EOF
